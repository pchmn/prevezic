/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsAddRouteImport } from './routes/projects/add'
import { Route as ProjectsProjectIdRouteImport } from './routes/projects/$projectId'
import { Route as ProjectsProjectIdSlideShowRouteImport } from './routes/projects/$projectId.slide-show'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsAddRoute = ProjectsAddRouteImport.update({
  id: '/projects/add',
  path: '/projects/add',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsProjectIdRoute = ProjectsProjectIdRouteImport.update({
  id: '/projects/$projectId',
  path: '/projects/$projectId',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsProjectIdSlideShowRoute =
  ProjectsProjectIdSlideShowRouteImport.update({
    id: '/slide-show',
    path: '/slide-show',
    getParentRoute: () => ProjectsProjectIdRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/projects/$projectId': typeof ProjectsProjectIdRouteWithChildren
  '/projects/add': typeof ProjectsAddRoute
  '/projects/$projectId/slide-show': typeof ProjectsProjectIdSlideShowRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/projects/$projectId': typeof ProjectsProjectIdRouteWithChildren
  '/projects/add': typeof ProjectsAddRoute
  '/projects/$projectId/slide-show': typeof ProjectsProjectIdSlideShowRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/projects/$projectId': typeof ProjectsProjectIdRouteWithChildren
  '/projects/add': typeof ProjectsAddRoute
  '/projects/$projectId/slide-show': typeof ProjectsProjectIdSlideShowRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/projects/$projectId'
    | '/projects/add'
    | '/projects/$projectId/slide-show'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/projects/$projectId'
    | '/projects/add'
    | '/projects/$projectId/slide-show'
  id:
    | '__root__'
    | '/'
    | '/projects/$projectId'
    | '/projects/add'
    | '/projects/$projectId/slide-show'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProjectsProjectIdRoute: typeof ProjectsProjectIdRouteWithChildren
  ProjectsAddRoute: typeof ProjectsAddRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/add': {
      id: '/projects/add'
      path: '/projects/add'
      fullPath: '/projects/add'
      preLoaderRoute: typeof ProjectsAddRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId': {
      id: '/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId/slide-show': {
      id: '/projects/$projectId/slide-show'
      path: '/slide-show'
      fullPath: '/projects/$projectId/slide-show'
      preLoaderRoute: typeof ProjectsProjectIdSlideShowRouteImport
      parentRoute: typeof ProjectsProjectIdRoute
    }
  }
}

interface ProjectsProjectIdRouteChildren {
  ProjectsProjectIdSlideShowRoute: typeof ProjectsProjectIdSlideShowRoute
}

const ProjectsProjectIdRouteChildren: ProjectsProjectIdRouteChildren = {
  ProjectsProjectIdSlideShowRoute: ProjectsProjectIdSlideShowRoute,
}

const ProjectsProjectIdRouteWithChildren =
  ProjectsProjectIdRoute._addFileChildren(ProjectsProjectIdRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProjectsProjectIdRoute: ProjectsProjectIdRouteWithChildren,
  ProjectsAddRoute: ProjectsAddRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
